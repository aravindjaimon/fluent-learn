{"version":3,"sources":["Components/Teams/Header.tsx","Components/Teams/Teams.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","iconClass","mergeStyles","fontSize","color","margin","Stack","horizontal","verticalFill","horizontalAlign","verticalAlign","tokens","childrenGap","styles","root","backgroundColor","height","Item","ActionButton","FontIcon","aria-label","iconName","className","width","grow","SearchBox","borderRadius","placeholder","onSearch","newValue","console","log","Persona","size","PersonaSize","size32","imageInitials","presence","PersonaPresence","online","Teams","initializeIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","padding","ReactDOM","render","document","getElementById"],"mappings":"uPA4GeA,EAhGA,WACb,IAAMC,EAAYC,YAAY,CAC5BC,SAAU,GACVC,MAAO,QACPC,OAAQ,UAGV,OACE,eAACC,EAAA,EAAD,CACEC,YAAU,EACVC,cAAY,EACZC,gBAAgB,gBAChBC,cAAc,SACdC,OAAQ,CAAEC,YAAa,IACvBC,OAAQ,CAAEC,KAAM,CAAEC,gBAAiB,UAAWC,OAAQ,KANxD,UAQE,eAACV,EAAA,EAAMW,KAAP,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,cACXC,SAAS,cACTC,UAAWrB,MAGf,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,eACXC,SAAS,eACTC,UAAWrB,SAIjB,cAACK,EAAA,EAAMW,KAAP,UACE,eAACX,EAAA,EAAD,CACEO,OAAQ,CAAEC,KAAM,CAAES,MAAO,MACzBhB,YAAU,EACVI,OAAQ,CAAEC,YAAa,IACvBF,cAAc,SACdD,gBAAgB,SALlB,UAOE,cAACH,EAAA,EAAMW,KAAP,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,cACXC,SAAS,cACTC,UAAWrB,QAIjB,cAACK,EAAA,EAAMW,KAAP,CAAYO,MAAI,EAAhB,SACE,cAACC,EAAA,EAAD,CACEZ,OAAQ,CAAEC,KAAM,CAAEY,aAAc,WAChCC,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAcC,QAAQC,IAAI,YAAcF,aAK1D,cAACvB,EAAA,EAAMW,KAAP,UACE,eAACX,EAAA,EAAD,CAAOC,YAAU,EAACG,cAAc,SAAhC,UACE,cAACJ,EAAA,EAAMW,KAAP,UACE,cAACe,EAAA,EAAD,CACEC,KAAMC,IAAYC,OAClBC,cAAc,KACdC,SAAUC,IAAgBC,WAG9B,eAACjC,EAAA,EAAMW,KAAP,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,SACXC,SAAS,SACTC,UAAWrB,MAGf,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,OACXC,SAAS,OACTC,UAAWrB,MAGf,cAACiB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,SACXC,SAAS,SACTC,UAAWrB,kBCpFZuC,EAVD,WACZ,OACE,cAAClC,EAAA,EAAD,UACE,cAACA,EAAA,EAAMW,KAAP,UACE,cAAC,EAAD,SCHRwB,cAEO,IAAMC,EAAU,WACrB,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,OCISqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFd1C,YAAY,CACV,2BAA4B,CAC1BG,OAAQ,EACR+C,QAAS,EACTpC,OAAQ,WAIZqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDb,M","file":"static/js/main.a425ac0c.chunk.js","sourcesContent":["import {\n  ActionButton,\n  FontIcon,\n  mergeStyles,\n  Persona,\n  PersonaPresence,\n  PersonaSize,\n  SearchBox,\n  Stack,\n} from \"@fluentui/react\";\nimport React from \"react\";\n\nconst Header = () => {\n  const iconClass = mergeStyles({\n    fontSize: 15,\n    color: \"white\",\n    margin: \"0 5px\",\n  });\n\n  return (\n    <Stack\n      horizontal\n      verticalFill\n      horizontalAlign=\"space-between\"\n      verticalAlign=\"center\"\n      tokens={{ childrenGap: 10 }}\n      styles={{ root: { backgroundColor: \"#464775\", height: 50 } }}\n    >\n      <Stack.Item>\n        <ActionButton>\n          <FontIcon\n            aria-label=\"ChevronLeft\"\n            iconName=\"ChevronLeft\"\n            className={iconClass}\n          />\n        </ActionButton>\n        <ActionButton>\n          <FontIcon\n            aria-label=\"ChevronRight\"\n            iconName=\"ChevronRight\"\n            className={iconClass}\n          />\n        </ActionButton>\n      </Stack.Item>\n      <Stack.Item>\n        <Stack\n          styles={{ root: { width: 1000 } }}\n          horizontal\n          tokens={{ childrenGap: 20 }}\n          verticalAlign=\"center\"\n          horizontalAlign=\"center\"\n        >\n          <Stack.Item>\n            <ActionButton>\n              <FontIcon\n                aria-label=\"Handwriting\"\n                iconName=\"Handwriting\"\n                className={iconClass}\n              />\n            </ActionButton>\n          </Stack.Item>\n          <Stack.Item grow>\n            <SearchBox\n              styles={{ root: { borderRadius: \"0.2rem\" } }}\n              placeholder=\"Search or type a command\"\n              onSearch={(newValue) => console.log(\"value is \" + newValue)}\n            />\n          </Stack.Item>\n        </Stack>\n      </Stack.Item>\n      <Stack.Item>\n        <Stack horizontal verticalAlign=\"center\">\n          <Stack.Item>\n            <Persona\n              size={PersonaSize.size32}\n              imageInitials=\"AJ\"\n              presence={PersonaPresence.online}\n            />\n          </Stack.Item>\n          <Stack.Item>\n            <ActionButton>\n              <FontIcon\n                aria-label=\"Remove\"\n                iconName=\"Remove\"\n                className={iconClass}\n              />\n            </ActionButton>\n            <ActionButton>\n              <FontIcon\n                aria-label=\"Stop\"\n                iconName=\"Stop\"\n                className={iconClass}\n              />\n            </ActionButton>\n            <ActionButton>\n              <FontIcon\n                aria-label=\"Cancel\"\n                iconName=\"Cancel\"\n                className={iconClass}\n              />\n            </ActionButton>\n          </Stack.Item>\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  );\n};\n\nexport default Header;\n","import { Stack } from \"@fluentui/react\";\nimport React from \"react\";\nimport Header from \"./Header\";\n\nconst Teams = () => {\n  return (\n    <Stack>\n      <Stack.Item>\n        <Header />\n      </Stack.Item>\n    </Stack>\n  );\n};\n\nexport default Teams;\n","import { initializeIcons } from \"@fluentui/react\";\nimport React, { FC } from \"react\";\nimport \"./App.css\";\nimport Teams from \"./Components/Teams/Teams\";\n\ninitializeIcons();\n\nexport const App: FC = () => {\n  return (\n    <div className=\"App\">\n      <Teams />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { mergeStyles } from '@fluentui/react';\nimport reportWebVitals from './reportWebVitals';\n\n// Inject some global styles\nmergeStyles({\n  ':global(body,html,#root)': {\n    margin: 0,\n    padding: 0,\n    height: '100vh',\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}